import 'babel/polyfill';
import Voronoi from 'voronoi';
import raf from 'raf';

const { sin, cos, round, random, min, PI } = Math;

let voronoi = new Voronoi();
let diagram;
let canvas = document.getElementById('cnv');
let ctx = canvas.getContext('2d');

function dst(p1, p2) {
	return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));
}

function drawDot(ctx, dot) {
	ctx.beginPath();
	ctx.arc(dot.x, dot.y, dot.ex/2, 0, PI * 2);
	ctx.fillStyle = dot.color;
	ctx.fill();
}

const currentPos = (time, dot) => {
	const speed = time / 200 / dot.speed * PI;
	const x1 = cos(speed) * 5;
	const y1 = sin(speed) * dot.ex * dot.reverse * 5;

	dot.x = dot._x / 1000 * window.innerWidth + (x1 * cos(dot.angle) - y1 * sin(dot.angle));
	dot.y = dot._y / 700 * window.innerHeight + (x1 * sin(dot.angle) + y1 * cos(dot.angle));
}

function draw(dots, ctx, time) {
	voronoi.recycle(diagram);

	for(let i = 0, max = dots.length; i < max; i += 1) {
		currentPos(time, dots[i]);
	}

	diagram = voronoi.compute(
		dots,
		{xl: 0, xr: ctx.canvas.width, yt: 0, yb: ctx.canvas.height}
	);
	// ctx.fillStyle = '#1E0E33';
	// ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);

	for(let i = 0, max = diagram.edges.length; i < max; i ++) {
		const { va, vb } = diagram.edges[i];
		ctx.beginPath();
		ctx.lineWidth = 1;
		ctx.strokeStyle = `rgba(255,${round(3.5 / dst(va, vb) * 255)},0, ${3.5 / dst(va, vb)})`;
		ctx.moveTo(va.x, va.y);
		ctx.lineTo(vb.x, vb.y);
		ctx.stroke();
	}

	// dots.forEach((dot) => drawDot(ctx, dot));
}

function rndm(a, b) {
	return random() * (b - a) + a;
}

function dot(x, y) {
	return { x, y,
		_x: x,
		_y: y,
		ex: rndm(1, 5),
		angle: rndm(0, 10 * PI),
		reverse: round(random()) * 2 - 1,
		speed: rndm(1, 10),
		color: `rgb(${[rndm(100, 200), rndm(10, 150), rndm(10, 100)].map(round).join(',')})`
	};
}

let dots = [];

// for(let i = 0; i < 15; i ++) {
// 	for(let j = 0; j < 8; j ++) {
// 		dots.push(dot(i * 140 * (random() * 0.3 + 0.3), j * 200 * (random() * 0.3 + 0.3)));
// 	}
// }

// [[0, 0], [1000, 100]].map((d) => dots.push(dot(...d)))

const pool = [[115.97078420951989,621.1261154351309],[102.13151320820228,620.0862912282405],[112.80238975005008,624.952894080541],[105.76537350363068,624.2746728385669],[115.1038503845887,632.4208464735508],[100.96109218337433,615.7931479794252],[107.43977575741876,629.0353021288269],[95.85136873741794,632.3342546462551],[129.35333658550402,628.4683837871283],[103.11020814794817,634.5464278290659],[126.60061985707505,634.7132479456919],[113.31763929458415,623.841969032874],[122.44957472810546,610.8059029382356],[123.04038878756661,610.0756626192643],[130.91157148532812,612.2648552749498],[112.19866878242206,610.8441248539003],[136.48038649673555,622.3277536402787],[131.4611864782686,601.1235241693031],[119.27318294920569,611.1923187566232],[134.00569276307502,608.9126724271579],[126.11111201968173,595.0307329038825],[137.17096263479033,612.8666728202588],[129.35398326540732,613.3362981642844],[133.86048148932613,618.6353981325539],[148.15692884027396,590.4253765826577],[152.15428117866367,589.3783362610137],[143.02989366384196,599.0346580645548],[145.95104805864824,575.9736158182127],[139.86304743970248,600.777762262369],[160.36334013146688,598.3352221577336],[151.89752765709974,584.3751099002559],[184.9470314667498,558.4476424157107],[168.98744988614732,579.7143892863176],[160.12527712364653,564.6276405097644],[173.00985132257938,569.3475427284078],[181.9893594927832,553.6471959089356],[190.30262966748236,568.0119328529538],[204.5374849409011,577.296405479478],[206.78197207361438,555.0331983873529],[201.34600528411252,556.8869701549442],[214.52691885371144,544.9288770763305],[214.02259996429044,537.7696316612114],[209.66857224958346,558.6864160954281],[217.38239644651432,550.1423852796911],[223.86090638753473,545.4513211220433],[222.1908099185867,528.0896673353859],[215.11854475349224,551.5677295619302],[221.1440981611206,525.6858891703508],[224.75267993119624,520.926414192578],[220.78315845897276,536.0925993724989],[213.77088798796595,524.2045912381559],[242.46836611861653,538.2104760011159],[233.7640845270562,524.7236546026985],[239.35365865001927,535.3237495625385],[247.06866049636264,521.3440576761598],[255.93957739189332,528.0802188307193],[272.43549376083,525.1025868864934],[248.49492019864394,519.1095380737037],[261.814948043568,537.6710394760032],[267.58766655673935,513.0194370181864],[258.0265659376395,510.2981251782309],[260.35752648460345,518.793266768799],[265.7462911873378,515.7464104854358],[270.14333842296367,504.6136318065772],[277.8084483106315,496.78906072744394],[286.5473302121926,501.0967461099108],[283.73043510943114,504.21463983937485],[292.1427155610581,503.3808806371248],[294.83233397752684,480.412424970227],[290.6806654731976,485.1194956100714],[303.10244671783926,481.9714595453501],[294.84841837125657,476.11155895802506],[317.737996195909,477.70810597128917],[311.97794323364894,488.75982494040034],[309.96528126023134,468.08621214403144],[315.497741198568,481.713141169452],[326.82049523648476,468.35709693561813],[341.9721105785881,456.09468793402186],[337.1067561050619,471.5137972140406],[360.3275161912201,452.89025148449696],[373.66824859255047,474.00008068158286],[364.76793317249667,464.3780804148057],[350.2075654694653,457.47582502172344],[365.3193888408629,447.20769653344695],[374.7454016831485,462.4374150980939],[386.1393443757156,458.51070255641974],[378.0447979334185,437.0603808146846],[394.10190415758433,421.9134118276893],[388.60900118998273,437.59976523882847],[407.04103455154285,443.9692969443753],[409.7995521028906,438.13994123782345],[400.213591181441,425.91919361325137],[418.4148552971966,417.368238455554],[438.6840286694329,413.6277484832035],[435.8984889776299,394.4811599955092],[461.61249361085476,405.76617770512865],[447.8451529776408,411.43890644740213],[443.8960163293656,397.38540668293274],[463.5579940590963,419.3354943678162],[466.84459384501463,393.97215540388896],[491.0307428269378,384.6433901331774],[482.80575002897547,396.0939620456544],[507.721904031593,401.7053417373405],[520.5870508138366,384.65900605469403],[504.39749704955426,367.72740690448643],[528.4165376282249,388.03090381249416],[523.3008174799179,368.3587272565547],[542.312219844306,356.93169552980464],[562.8616110129142,361.3253428982758],[554.0215607980301,360.5402785522051],[565.7855900547448,346.8012794195359],[592.5817855455873,350.9594369023106],[589.6814470089828,335.376603079644],[610.5237025125231,344.5014737242581],[599.789865172635,320.5211417602059],[631.1063199712436,329.2639841748712],[645.8812207871259,342.04043922784285],[632.4090158784866,336.44710171112865],[642.6675495297771,325.5534523279618],[643.4076279870991,323.02608714467334],[681.7785315592961,315.9345059984103],[674.115271054295,326.6414932861506],[668.3756775506737,295.1242941062436],[694.5419006064342,325.29067213431784],[679.6737272736076,321.1730997628798],[672.5940042030095,307.0878056739146],[707.6460358113227,307.81825392112734],[678.8549089073504,308.38085891789746],[713.5347886959019,314.75589012526467],[704.6113587128995,300.64374125098766],[710.3933108849717,297.0008448187139],[719.2421334885979,310.8240770500497],[718.0198184978631,301.7081579383263],[719.9509345492688,301.75911227106263],[715.9620042481037,297.9610180106332],[727.8281856289877,298.32509564841155],[728.8056440505941,296.6569235515678],[732.9600520977791,292.00642541219537],[747.5476864566101,295.0888993965276],[743.4165467406707,287.0353295501178],[752.2660058881191,285.47513140050944],[778.7681823069105,273.5025740732973],[782.7050159373293,287.2944512328724],[785.9182835984001,275.42761776898533],[794.6773707444362,287.1688626296492],[784.2391601668295,286.0529294218345],[787.7325158847271,269.47541745992464],[807.6212429828256,288.291322295848],[810.8015546571763,276.31199124130086],[789.0290273355199,286.0993308354921],[808.8384716350415,267.64411233173803],[824.3082807741813,280.90551647191063],[831.0204922425215,259.6835431265662]];
let i = 0;
// const interval = setInterval(() => {
// 	if(pool[i]) {
// 		dots.push(dot(...pool[i]));
// 		i ++;
// 	} else {
// 		clearInterval(interval);
// 	}
// }, 50);


function loop(time) {
	setTimeout(() => raf(loop), 1000/20);
	draw(dots, ctx, time);
}

raf(loop);

window.new_dots = [];

document.addEventListener('mousemove', (evt) => {
	if(evt.metaKey) {
		const d = dot(
			evt.pageX / window.innerWidth * 1000,
			evt.pageY / window.innerHeight * 700
		);
		dots.push(d);
		window.new_dots.push(d);
	}
});

window.addEventListener('resize', () => {
	canvas.width = window.innerWidth + 2;
	canvas.height = window.innerHeight + 2;
});

canvas.width = window.innerWidth + 2;
canvas.height = window.innerHeight + 2;